function ScaleAndShiftEqualization(image_path)
input_img = imread(image_path);
input_luminance_pdf = CalculateLuminancePdf(input_img,'Original Image Luminance PDF');
CalculateLuminanceCdf(input_luminance_pdf,'Original Image Luminance CDF');
figure('Name','Original Image','Numbertitle','off')
imshow(input_img);
image_size = size(input_img);
width = image_size(1,1);
height = image_size(1,2);
output_img = input_img;
L = 256;
% d1 = 0;
% d2 = 3*(L-1);
% m = 0.5*3*(L-1);
% n = 2;
input_img_grayscale = rgb2gray(input_img);
input_img_grayscale_eq = histeq(input_img_grayscale);
for i=1:width
    for j=1:height
        red = double(input_img(i,j,1));
        green = double(input_img(i,j,2));
        blue = double(input_img(i,j,3));
        input_intensity = double(red + green + blue);         
        output_intensity = double(input_img_grayscale_eq(i,j)); %s_transform(d1,d2,m,n,input_intensity);    
        output_intensity = 3*output_intensity;  
        if(input_intensity~=0)                 
            alfa = double(output_intensity)/double(input_intensity);        
        else            
            alfa = 0;
        end        
        if(alfa <= 1)   
            output_red = round(alfa*red);                
            output_green = round(alfa*green);
            output_blue = round(alfa*blue);
        else          
            y_red = double((L-1) - red);          
            y_green = double(L-1) - green);         
            y_blue = double((L-1) - blue);         
            y_input_intensity = y_red + y_green + y_blue;                     
            y_output_intensity = 3*(L-1) - (output_intensity);            
            if(y_input_intensity ~= 0)
                y_alfa = double(y_output_intensity)/double(y_input_intensity);
            else
                y_alfa = 0;
            end            
            y_output_red = double(y_alfa*y_red);    
            y_output_red
            y_output_green = round(y_alfa*y_green);
            y_output_blue = round(y_alfa*y_blue);

            output_red = (L-1) - y_output_red;
            output_green = (L-1) - y_output_green;
            output_blue = (L-1) - y_output_blue;     
        end
        output_img(i,j,1) = output_red;
        output_img(i,j,2) = output_green;
        output_img(i,j,3) = output_blue;
    end   
end
figure('Name','Scale-and-Shifiting Equalized Image', 'Numbertitle', 'off');
imshow(output_img);
output_luminance_pdf = CalculateLuminancePdf(output_img,'Scale-and-Shifiting Equalized Image Luminance PDF');
CalculateLuminanceCdf(output_luminance_pdf,'Scale-and-Shifiting Equalized Image Luminance CDF');
end